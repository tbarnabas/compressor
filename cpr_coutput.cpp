
/////////////////////////////////////////////////////////////////////////////
//
// cpr_coutput.cpp - ::CPR::COutput class source
//
/////////////////////////////////////////////////////////////////////////////

#include "cpr_coutput.h"

namespace CPR {

/////////////////////////////////////////////////////////////////////////////
COutput::COutput(const T_STRING & sFile, ::CPR::CFile::operations operation) :
  ::CPR::CFile(sFile, operation) {
} // COutput


/////////////////////////////////////////////////////////////////////////////
COutput::~COutput() {
} // ~COutput


/////////////////////////////////////////////////////////////////////////////
COutput::COutput(const COutput & tOutput) :
  ::CPR::CFile(tOutput) {
} // COutput


/////////////////////////////////////////////////////////////////////////////
COutput & COutput::operator=(const COutput & tOutput) {
  ::CPR::CFile::operator=(tOutput);
  return (* this);
} // operator=


/////////////////////////////////////////////////////////////////////////////
void COutput::WriteType(::CPR::types type) {
  REFERENCE< ::BASE::CArray<T_BYTE> > tBuffer;

  tBuffer.Create(new ::BASE::CArray<T_BYTE>(NULL, 1));
  tBuffer->operator[](0) = (T_BYTE)type;
 
  ::CPR::CFile::Write(tBuffer);
} // WriteType

} // namespace CPR
